{
  "suggest.noselect": true,
  "coc.preferences.formatOnSaveFiletypes": [
    "dhall",
    "elm",
    "fsharp",
    "html",
    "haskell",
    "javascript",
    "json",
    "purescript",
    "rust",
    "sh",
    "sql",
    "typescript",
    "typescriptreact", 
    "yaml",
    "yml"
  ],
  "coc.preferences.rootPatterns": [
    ".git", 
    "elm.json", 
    "spago.dhall",
    "Cargo.toml",
    "*.cabal",
    "stack.yaml",
    "package.json"
  ],
  "diagnostic.refreshOnInsertMode": true,
  "diagnostic.virtualText": true,
  "diagnostic.virtualTextPrefix": "~~> ",
  "codeLens.enable": true,
  "codeLens.position": "eol",
  "sql.database": "postgresql",
  "tsserver.disableAutomaticTypeAcquisition": false,
  "typescript.updateImportsOnFileMove.enable": false,
  "javascript.updateImportsOnFileMove.enable": false,
  "javascript.suggestionActions.enabled": false,
  "yaml.format.enable": true,
  "yaml.schemaStore.enable": true,
  "yaml.customTags": [
    "!Ref",
    "!GetAtt",
    "!fn",
    "!And",
    "!If",
    "!Not",
    "!Equals",
    "!Or",
    "!FindInMap sequence",
    "!Base64",
    "!Cidr",
    "!Sub",
    "!GetAZs",
    "!ImportValue",
    "!Select",
    "!Split",
    "!Join sequence"
  ],
  "languageserver": {
    "elmLS": {
      "command": "elm-language-server",
      "filetypes": [ "elm" ],
      "rootPatterns": [ "elm.json" ]
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "filetypes": ["haskell"],
      "rootPatterns": [
        "*.cabal",
        "stack.yaml"
      ],
      "args": ["--lsp", "-j 10"]
    },
    "purescript": {
      "command": "purescript-language-server",
      "args": ["--stdio"],
      "filetypes": ["purescript"],
      "trace.server": "off",
      "rootPatterns": ["bower.json", "psc-package.json", "spago.dhall"],
      "settings": {
        "purescript": {
          "addSpagoSources": true,
          "addNpmPath": true,
          "formatter": "purs-tidy"
        }
      }
    },
    "dhall": {
      "command": "dhall-lsp-server",
      "filetypes": [ "dhall" ]
    }
  },
  // use coc-diagnostic (diagnostic-languageserver) to provide bash formatting
  // Ref https://github.com/meatwallace/dotfiles/issues/129#issuecomment-560035270
  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "sh": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    "shfmt": {
      "command": "shfmt",
      "args": ["-i", "2", "-bn", "-ci", "-sr"]
    }
  }
}
